/*
문제:
    환규와 태욱이는 둘이서 즐길 수 있는 간단한 게임인 탕수육 게임을 하기로 했다. 게임의 규칙은 다음과 같다.
        1. 누가 먼저 시작할지 순서를 정한다.
        2. 먼저 시작하는 사람이 단어의 가장 첫 글자를 말한다.
        3. 이후 두 사람이 번갈아 가며 자신의 차례에 이전 사람이 말한 글자의 다음 글자를 말한다.
        4. 만약 이전 사람이 단어의 가장 마지막 글자를 말했다면 자신의 차례에 단어의 가장 첫 글자를 말한다.
        5.만약 자신의 차례에 잘못된 글자를 말하면 게임에서 지게 된다.
    위 규칙을 이용해 탕수육이란 단어를 가지고 게임을 진행하면 다음과 같다.
        탕 수 육 탕 수 육 탕 수 육 탕 수 육 …
    위 예시에서 밑줄 친 부분은 첫 번째 사람이, 밑줄이 없는 부분은 두 번째 사람이 말하게 되는 부분이다. 
    이때 밑줄 그어진 부분만 따로 살펴보면 “탕육수탕육수…”가 됨을 알 수 있는데, 
    따라서 먼저 시작하는 사람은 게임을 시작하기 전에 “탕육수” 만을 기억한 후 상대방이 어떤 단어를 말하든 “탕육수” 순서로 계속 반복해서 말하면 절대로 틀리지 않는다. 
    만약 “탕육”이나 “탕육수탕”을 기억한다면 기억한 문자열을 처음부터 하나씩 순서대로 말했을 때 자신의 차례에 올바르지 않은 문자를 말하게 되어 게임에서 지게 된다. 
    “탕육수탕육수”를 기억한다고 하더라도 자신의 차례에 틀린 문자를 말하게 되지는 않지만, “탕육수” 만을 기억해도 게임을 진행할 수 있으므로 이 경우 항상 기억해야 할 최소한의 글자만을 기억한다고 가정한다. 
    또한, 나중에 시작하는 사람도 게임을 시작하기 전에 “수탕육”만을 기억한 다음 “수탕육” 순서대로 반복해서 말하면 절대로 틀리지 않는다.
    
    환규와 태욱이는 이번에는 한글 대신 알파벳을 사용해서 게임을 해보기로 했다. 
    만약 주어진 단어가 “ABC”이고, 환규가 먼저 시작한다면 환규는 “ACB”를, 태욱이는 “BAC” 만을 기억하면 게임을 지지 않게 된다. 
    게임에 사용할 알파벳으로 된 문자열이 주어질 때, 두 사람이 미리 기억하고 있어야 되는 문자열 중 가장 짧은 것을 출력하는 프로그램을 작성하시오.
*/

#include <iostream>
#include <string>

using namespace std;

int main(){
    int num=0;
    cin>>num;

    for(int i=0;i<num;i++){
        string temp;
        cin>>temp;

        if(temp.length()==1){
            cout<<temp<<endl;
            cout<<temp<<endl;
            continue;
        }

        string temp1="";
        string temp2="";
        if(temp.length()%2==0){
            for(int j=0;j<temp.length();j++){
                if(j%2==0){
                    temp1+=temp[j];
                }
                else{
                    temp2+=temp[j];
                }
            }
        }
        else{
            temp+=temp;
            for(int j=0;j<temp.length();j++){
                if(j%2==0){
                    temp1+=temp[j];
                }
                else{
                    temp2+=temp[j];
                }
            }
        }

        cout<<temp1<<endl;
        cout<<temp2<<endl;
    }


    return 0;
}